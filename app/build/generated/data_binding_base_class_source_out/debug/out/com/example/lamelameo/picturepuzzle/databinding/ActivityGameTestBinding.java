// Generated by view binder compiler. Do not edit!
package com.example.lamelameo.picturepuzzle.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.lamelameo.picturepuzzle.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameTestBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton imageButton2;

  @NonNull
  public final ImageView imageTest;

  @NonNull
  public final GridView puzzlegrid;

  @NonNull
  public final TextView textView;

  private ActivityGameTestBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton imageButton2, @NonNull ImageView imageTest, @NonNull GridView puzzlegrid,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.imageButton2 = imageButton2;
    this.imageTest = imageTest;
    this.puzzlegrid = puzzlegrid;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageButton2;
      ImageButton imageButton2 = rootView.findViewById(id);
      if (imageButton2 == null) {
        break missingId;
      }

      id = R.id.imageTest;
      ImageView imageTest = rootView.findViewById(id);
      if (imageTest == null) {
        break missingId;
      }

      id = R.id.puzzlegrid;
      GridView puzzlegrid = rootView.findViewById(id);
      if (puzzlegrid == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityGameTestBinding((ConstraintLayout) rootView, imageButton2, imageTest,
          puzzlegrid, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
