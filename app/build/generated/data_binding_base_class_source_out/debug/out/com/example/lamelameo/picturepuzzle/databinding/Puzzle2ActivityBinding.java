// Generated by view binder compiler. Do not edit!
package com.example.lamelameo.picturepuzzle.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import com.example.lamelameo.picturepuzzle.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Puzzle2ActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView bestsView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final TextView gameTimer;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final ToggleButton hintButton;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final FrameLayout hintButtonContainer;

  @NonNull
  public final ImageView hintImage;

  @NonNull
  public final TextView moveCounter;

  @NonNull
  public final ImageButton pauseButton;

  @NonNull
  public final View pauseContainer;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout solvedUIContainer;

  private Puzzle2ActivityBinding(@NonNull ConstraintLayout rootView, @NonNull TextView bestsView,
      @NonNull ConstraintLayout container, @NonNull TextView gameTimer,
      @NonNull GridLayout gridLayout, @NonNull ToggleButton hintButton,
      @Nullable FrameLayout hintButtonContainer, @NonNull ImageView hintImage,
      @NonNull TextView moveCounter, @NonNull ImageButton pauseButton, @NonNull View pauseContainer,
      @Nullable LinearLayout solvedUIContainer) {
    this.rootView = rootView;
    this.bestsView = bestsView;
    this.container = container;
    this.gameTimer = gameTimer;
    this.gridLayout = gridLayout;
    this.hintButton = hintButton;
    this.hintButtonContainer = hintButtonContainer;
    this.hintImage = hintImage;
    this.moveCounter = moveCounter;
    this.pauseButton = pauseButton;
    this.pauseContainer = pauseContainer;
    this.solvedUIContainer = solvedUIContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Puzzle2ActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Puzzle2ActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.puzzle2_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Puzzle2ActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bestsView;
      TextView bestsView = rootView.findViewById(id);
      if (bestsView == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.gameTimer;
      TextView gameTimer = rootView.findViewById(id);
      if (gameTimer == null) {
        break missingId;
      }

      id = R.id.gridLayout;
      GridLayout gridLayout = rootView.findViewById(id);
      if (gridLayout == null) {
        break missingId;
      }

      id = R.id.hintButton;
      ToggleButton hintButton = rootView.findViewById(id);
      if (hintButton == null) {
        break missingId;
      }

      FrameLayout hintButtonContainer = rootView.findViewById(R.id.hintButtonContainer);

      id = R.id.hintImage;
      ImageView hintImage = rootView.findViewById(id);
      if (hintImage == null) {
        break missingId;
      }

      id = R.id.moveCounter;
      TextView moveCounter = rootView.findViewById(id);
      if (moveCounter == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      ImageButton pauseButton = rootView.findViewById(id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.pauseContainer;
      View pauseContainer = rootView.findViewById(id);
      if (pauseContainer == null) {
        break missingId;
      }

      LinearLayout solvedUIContainer = rootView.findViewById(R.id.solvedUIContainer);

      return new Puzzle2ActivityBinding((ConstraintLayout) rootView, bestsView, container,
          gameTimer, gridLayout, hintButton, hintButtonContainer, hintImage, moveCounter,
          pauseButton, pauseContainer, solvedUIContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
